{"version":3,"sources":["logo.svg","components/ListCards.js","utils/api.js","components/RestaurantList.js","pages/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListCards","this","props","name","time","changeToString","hours","minutes","c","toFixed","className","map","_","i","day","start","end","Component","axios","create","baseURL","getRestaurants","limit","offset","method","headers","url","RestaurantList","handleSearch","e","target","value","console","log","getRestaurantsByName","then","res","setState","restaurants","data","length","_isBusy","_isEmpty","onTimeChange","parts","match","seconds","Number","onDayChange","substring","filterBy","state","getRestaurantsByTime","count","catch","err","restaurant","style","width","type","placeholder","onChange","required","disabled","selected","onClick","classnames","handlePrev","handleNext","Index","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,kC,yJCEtBC,E,uKACP,IAAD,EACgBC,KAAKC,MAAnBC,EADF,EACEA,KAAMC,EADR,EACQA,KAEPC,EAAiB,SAACD,GACrB,IAAME,EAAQF,EAAO,GAAI,GACnBG,GAAWH,EAAgB,GAARE,EAAa,IAAQ,GACxCE,EAAIF,EAAQ,GAAK,GAAK,EAC5B,MAAM,GAAN,OAAUA,EAAMG,QAAQ,GAAKD,EAA7B,YAAwD,GAAtBD,EAAQE,QAAQ,GAAU,KAAOF,EAAQE,QAAQ,GAAnF,YAA+F,IAALD,EAAU,KAAO,OAE9G,OACI,yBAAKE,UAAU,aAEX,yBAAKA,UAAU,cACdP,GAID,yBAAKO,UAAU,aACf,4CACCN,EAAKO,KAAI,SAACC,EAAGC,GAAJ,OACN,2BAAID,EAAEE,IAAN,MAAcT,EAAeO,EAAEG,OAA/B,MAA0CV,EAAeO,EAAEI,UAG/D,09B,GAxBuBC,a,gBCAvCC,IAAMC,OAAO,CACTC,QAAS,uCAIb,IAAMA,EAAS,qCAEFC,EAAiB,SAACC,EAAOC,GAClC,OAAOL,IAAM,CACTM,OAAS,MACTC,QAAU,CACN,OAAW,oBAEfC,IAAI,GAAD,OAAKN,EAAL,4BAAgCE,EAAhC,mBAAgDC,M,gBCVtCI,E,kDACjB,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IAmDV0B,aAAe,SAAAC,GACX,IAAM1B,EAAO0B,EAAEC,OAAOC,MACtBC,QAAQC,IAAI9B,GAEA,IAARA,ED3CwB,SAACA,GACjC,OAAOe,IAAM,CACTM,OAAS,MACTC,QAAU,CACN,OAAW,oBAEfC,IAAI,GAAD,OAAKN,EAAL,2BAA+BjB,EAA/B,cCsCC+B,CAAqB/B,GAChBgC,MAAK,SAAAC,GACF,EAAKC,SAAS,CAACC,YAAaF,EAAIG,KAAKA,OAEhCH,EAAIG,KAAKA,KAAKC,OAGf,EAAKH,SAAS,CAACI,SAAS,EAAOC,UAAU,IAFzC,EAAKL,SAAS,CAACI,SAAS,EAAMC,UAAU,OAMpD,EAAKrB,eAAe,IApET,EAwEnBsB,aAAe,SAAAd,GACX,EAAKQ,SAAS,CAAEI,SAAS,IACzB,IAEMG,EAFMf,EAAEC,OAAOC,MAEFc,MAAM,eAInBC,EAH2B,GAAnBC,OAAOH,EAAM,IAAW,GACH,GAAnBG,OAAOH,EAAM,IAI7B,EAAKP,SAAS,CAAES,aAlFD,EAqFnBE,YAAc,SAAAnB,GACV,EAAKQ,SAAS,CAAEI,SAAS,IACzB,IAAM3B,EAAKe,EAAEC,OAAOC,MAEjB,mBAAHjB,EAAMA,EAAImC,UAAU,EAAG,GAEvB,EAAKZ,SAAS,CAACvB,SA3FA,EA+FnBoC,SAAW,WAAO,IAAD,EACU,EAAKC,ODzEA,SAAC/C,EAAMU,GACvC,OAAOI,IAAM,CACTM,OAAS,MACTC,QAAU,CACN,OAAW,oBAEfC,IAAI,GAAD,OAAKN,EAAL,2BAA+BhB,EAA/B,gBAA2CU,MCoE9CsC,CAFa,EACNN,QADM,EACGhC,KACmBqB,MAAK,SAAAC,GACpC,EAAKC,SAAS,CACVC,YAAaF,EAAIG,KAAKA,KACtBE,SAAS,QAjGjB,EAAKU,MAAQ,CACTb,YAAa,GACbf,OAAQ,EACR8B,MAAO,EACPZ,SAAS,EACTC,UAAU,EACVI,QAAS,EACThC,IAAK,MAVM,E,gEAcG,IAAD,OACjBO,EAAe,GAAG,GAAGc,MAAK,SAAAC,GACtB,EAAKC,SAAS,CACVC,YAAaF,EAAIG,KAAKA,KACtBc,MAAOjB,EAAIG,KAAKc,WAErBC,OAAM,SAAAC,GAAG,OAAGvB,QAAQC,IAAIsB,Q,qCAGhBhC,GAAS,IAAD,OACnBtB,KAAKoC,SAAS,CAACI,SAAS,IACxBpB,EAAe,GAAIE,GAAQY,MAAK,SAAAC,GAC5B,EAAKC,SAAS,CACVC,YAAaF,EAAIG,KAAKA,KACtBhB,SACAkB,SAAS,OAEda,OAAM,SAAAC,GAAG,OAAGvB,QAAQC,IAAIsB,Q,mCAGhB,IAAD,EAC0BtD,KAAKkD,MAAvB5B,GADR,EACJiC,WADI,EACQjC,QADR,EACgB8B,MAC1B9B,GAAkB,EAElBtB,KAAKoB,eAAeE,K,iCAIbA,GAEP,GAAc,GAAVA,EAAa,CAAC,IAAD,EACgBtB,KAAKkD,MAAhB5B,GADL,EACPiC,WADO,EACKjC,QAClBA,GAAkB,EAElBtB,KAAKoB,eAAeE,M,+BAyDlB,IAAD,SAC8CtB,KAAKkD,MAAhDb,EADH,EACGA,YAAaf,EADhB,EACgBA,OAAQkB,EADxB,EACwBA,QAASC,EADjC,EACiCA,SAEtC,OACI,yBAAKhC,UAAU,sBACX,yBAAKA,UAAU,SACX,oDAEJ,yBAAKA,UAAU,UACX,uBAAGA,UAAU,6BACb,yBAAK+C,MAAO,CAACC,MAAO,QACpB,2BAAOC,KAAK,OAAOC,YAAY,iBAAiBC,SAAU,SAAChC,GAAD,OAAO,EAAKD,aAAaC,QAGvF,yBAAKnB,UAAU,WACf,8BACI,6BACI,2BAAOiD,KAAK,OAAOjD,UAAU,SAASoD,UAAQ,EAACD,SAAU,SAAChC,GAAD,OAAO,EAAKc,aAAad,OAEtF,6BACI,4BAAQnB,UAAU,UACd,4BAAQqB,MAAM,GAAGgC,UAAQ,EAACC,UAAQ,GAAlC,cACA,4BAAQjC,MAAM,OAAd,UACA,4BAAQA,MAAM,OAAd,WACA,4BAAQA,MAAM,OAAd,aACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,UACA,4BAAQA,MAAM,OAAd,YACA,4BAAQA,MAAM,OAAd,YAGR,6BACI,4BAAQ4B,KAAK,SAASjD,UAAU,qBAAhC,YAGA,4BAAQA,UAAU,YAAYuD,QAAS,kBAAM,EAAK5C,eAAe,KAAjE,UAER,yBAAKX,UAAU,SACVgC,EACA,iDACEJ,EAAYE,OAGfF,EAAY3B,KAAI,SAAC4B,EAAM1B,GAAP,OACZ,kBAAC,EAAD,CAAWV,KAAMoC,EAAKpC,KAAMC,KAAMmC,EAAKnC,UAH1C,2CAOL,yBAAKM,UAAU,WAEf,yBAAKA,UAAWwD,IAAW,CAAC,IAAO3C,EAAS,GAAI,CAAC,SAAYkB,GAAU,CACnE,SAAsB,GAAVlB,IACZ0C,QAAS,kBAAM,EAAKE,eAFxB,QAEgD,yBAAKzD,UAAWwD,IAAY,CAAC,SAAYzB,GAAU,CAAC,KAAQA,IAAWwB,QAAS,kBAAM,EAAKG,eAA3F,SAEhD,66G,GAhK4BnD,aCFvBoD,E,uKAEb,OACI,6BACI,yBAAK3D,UAAU,UACX,4CAEJ,yBAAKA,UAAU,aACX,kBAAC,EAAD,OAEJ,0e,GAVmBO,aCUpBqD,MARf,WACE,OACE,yBAAK5D,UAAU,OACb,kBAAC,EAAD,QCIc6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7B,MACvB,2DCZN8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEd9B,OAAM,SAAA+B,GACLrD,QAAQqD,MAAMA,EAAMC,c","file":"static/js/main.bc5fa23d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nexport default class ListCards extends Component {\n    render() {\n        const {name, time} = this.props\n\n        const changeToString = (time) => {\n           const hours = time / 60 /60\n           const minutes = (time - (hours * 60 * 60)) /  60\n           const c = hours > 12 ? 12 : 0\n           return `${hours.toFixed(0) - c}:${minutes.toFixed(0) == 0 ? \"00\" : minutes.toFixed(0) } ${c == 12 ? \"pm\" : \"am\"}`\n        }\n        return (\n            <div className=\"card-item\">\n\n                <div className=\"card-title\">\n                {name}\n                </div>\n\n\n                <div className=\"card-body\">\n                <strong>Schedule</strong>\n                {time.map((_, i) =>\n                    <p>{_.day} | {changeToString(_.start)} - {changeToString(_.end)}</p>\n                )}\n                </div>\n                <style>\n                    {`\n                        .card-item:hover {\n                            background: #e6e6e6;\n                        }\n                        .card-item {\n                            margin: 2em 2em 0 0;\n                            width: 200px;\n                            padding: 1em;\n                            border: 1px solid #999999;\n                            border-radius: 10px;\n                            min-height: 250px;\n                        }\n                        .card-title {\n                            width: 100%;\n                            font-weight: bold;\n                            font-size: 1.3em;\n                            color: #02633c;\n                        }\n                        .card-body {\n                            margin-top: 1em;\n                            width: 100%;\n                            font-size: 0.8em;\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n","import axios from \"axios\"\n\naxios.create({\n    baseURL: 'https://be-todo.herokuapp.com/api/',\n    /* other custom settings */\n  });\n\nconst baseURL= 'https://be-todo.herokuapp.com/api/';\n\nexport const getRestaurants = (limit, offset) => {\n    return axios({\n        method : 'GET',\n        headers : {\n            'Accept' : 'application/json'\n        },\n        url: `${baseURL}restaurant?limit=${limit}&offset=${offset}`\n    })\n}\n\nexport const getRestaurantsByName = (name) => {\n    return axios({\n        method : 'GET',\n        headers : {\n            'Accept' : 'application/json'\n        },\n        url: `${baseURL}restaurant/name/${name}?limit=5`\n    })\n}\n\nexport const getRestaurantsByTime = (time, day) => {\n    return axios({\n        method : 'GET',\n        headers : {\n            'Accept' : 'application/json'\n        },\n        url: `${baseURL}restaurant/time/${time}?day=${day}`\n    })\n}","import React, { Component } from 'react'\nimport ListCards from './ListCards'\nimport {getRestaurants, getRestaurantsByName, getRestaurantsByTime} from \"../utils/api\"\nimport classnames from \"classnames\"\n\nexport default class RestaurantList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            restaurants: [],\n            offset: 0,\n            count: 0,\n            _isBusy: false,\n            _isEmpty: false,\n            seconds: 0,\n            day: null\n        }\n    }\n\n    componentDidMount () {\n        getRestaurants(12,0).then(res=> {\n            this.setState({\n                restaurants: res.data.data,\n                count: res.data.count\n            })\n        }).catch(err=> console.log(err))\n    }\n\n    getRestaurants(offset) {\n        this.setState({_isBusy: true})\n        getRestaurants(12, offset).then(res=> {\n            this.setState({\n                restaurants: res.data.data,\n                offset,\n                _isBusy: false\n            })\n        }).catch(err=> console.log(err))\n    }\n\n    handleNext () {\n        let { restaurant, offset, count } = this.state\n        offset = offset + 5\n\n        this.getRestaurants(offset)\n\n    }\n\n    handlePrev(offset) {\n\n        if (offset != 0) {\n            let { restaurant, offset } = this.state\n            offset = offset - 5\n    \n            this.getRestaurants(offset)\n        }\n    }\n\n    handleSearch = e => {\n        const name = e.target.value\n        console.log(name)\n\n        if (name != '') {\n            getRestaurantsByName(name)\n                .then(res =>  {\n                    this.setState({restaurants: res.data.data})\n                    \n                    if (!res.data.data.length) {\n                        this.setState({_isBusy: true, _isEmpty: true})\n                    } else {\n                        this.setState({_isBusy: false, _isEmpty: false})\n                    }\n                })\n        } else {\n            this.getRestaurants(0)\n        }\n    }\n\n    onTimeChange = e => {\n        this.setState({ _isBusy: true})\n        const time= e.target.value\n\n        const parts = time.match(/(\\d+):(\\d+)/)\n        const hours = Number(parts[1]) * 60 * 60\n        const minutes = Number(parts[2]) * 60\n\n        const seconds = hours + minutes\n\n        this.setState({ seconds})\n    }\n\n    onDayChange = e => {\n        this.setState({ _isBusy: true})\n        const day= e.target.value\n\n        day = day.substring(0, 3)\n\n        this.setState({day})\n\n    }\n\n    filterBy = () => {\n        const {seconds, day} = this.state\n        getRestaurantsByTime(seconds, day).then(res => {\n            this.setState({\n                restaurants: res.data.data,\n                _isBusy: false\n            })\n        })\n    }\n\n    render() {\n        const { restaurants, offset, _isBusy, _isEmpty } = this.state\n\n        return (\n            <div className=\"list-of-restaurant\">\n                <div className=\"title\">\n                    <strong>What's open on:</strong>\n                </div>\n                <div className=\"search\">\n                    <i className=\"fa fa-search search-icon\"></i>\n                    <div style={{width: \"90%\"}}>\n                    <input type=\"text\" placeholder=\"search here...\" onChange={(e) => this.handleSearch(e) } />\n                    </div>\n                </div>\n                <div className=\"filters\">\n                <form>\n                    <div>\n                        <input type=\"time\" className=\"filter\" required onChange={(e) => this.onTimeChange(e)}/>\n                    </div>\n                    <div>\n                        <select className=\"filter\">\n                            <option value=\"\" disabled selected>Select Day</option>\n                            <option value=\"Mon\">Monday</option>\n                            <option value=\"Tue\">Tuesday</option>\n                            <option value=\"Wed\">Wednesday</option>\n                            <option value=\"Thu\">Thursday</option>\n                            <option value=\"Fri\">Friday</option>\n                            <option value=\"Sat\">Saturday</option>\n                            <option value=\"Sun\">Sunday</option>\n                        </select>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"filter btn-filter\">Filter</button>\n                    </div>\n                </form>\n                        <button className=\"btn-reset\" onClick={() => this.getRestaurants(0)}>Reset</button>\n                </div>\n                <div className=\"lists\">\n                    {_isEmpty ? \n                    (<h3>No Search results</h3>)\n                    : !restaurants.length ?\n                    (<h3>Loading...</h3>)\n                    : \n                    restaurants.map((data, i) => \n                        <ListCards name={data.name} time={data.time}/>\n                        \n                    )}\n                </div>\n                <div className=\"buttons\">\n                        \n                <div className={classnames({\"btn\": offset > 0}, {\"disabled\": _isBusy}, {\n                    \"disabled\": offset == 0\n                })} onClick={() => this.handlePrev()}>Prev</div><div className={classnames( {\"disabled\": _isBusy}, {\"btn\": !_isBusy})} onClick={() => this.handleNext()}>Next</div>\n                </div>\n                <style>\n                    {`  .filter {\n                            padding: 0.5em;\n                        }\n                        .btn-filter {\n                            border: none;\n                            padding: 1em 1.5em;\n                            cursor: pointer;\n                        }\n                        .btn-filter:hover {\n                            background: #e6e6e6;\n                        }\n                        .btn-reset {\n                            background: yellow;\n                            border: none;\n                            padding: 1em 1.5em;\n                            cursor: pointer;\n                        }\n                        .btn-reset:hover {\n                            background: #e6e6e6;\n                        }\n                        .filters {\n                            display: flex !important;\n                            width: 50%;\n                            justify-content: flex-start;\n                            flex-wrap: wrap;\n                            margin-left: 4em;\n                        }\n                        .filters div {\n                            margin-right: 2em;\n                        }\n                        .buttons {\n                            margin-top: 1em;\n                            display: flex !important;\n                            justify-content: flex-end;\n                            align-items: center;\n                        }\n                        .btn {\n                            padding: 1em;\n                            border: 1px solid #e6e6e6;\n                            border-radius: 5px;\n                            cursor: pointer;\n                        }\n                        .disabled {\n                            background: #d6d6d6;\n                            color: #999999;\n                            padding: 1em;\n                            border: 1px solid #e6e6e6;\n                            border-radius: 5px;\n                            cursor: pointer;\n                        }\n                        .disabled:hover {\n                            background: #999999; !important\n                            color: #d6d6d6 !important;\n                        }\n                        .btn:hover {\n                            background: #428eff;\n                            color: #fff;\n                        }\n                        .lists {\n                            display: flex !important;\n                            margin-top: 2em;\n                            justify-content: center;\n                            flex-wrap: wrap;\n                        }\n                        .list-of-restaurant {\n                            text-align: left;\n                            width: 100%;\n                            display: block;\n                        }\n                        .list-of-restaurant div {\n                            display: inline-block;\n                        }\n                        .title {\n                            width: 80%;\n                        }\n                        .search {\n                            display: flex;\n                            width: 20%;\n                        }\n                        .search-icon {\n                            padding-right: 0.5em;\n                            color: #999999;\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport RestaurantList from '../components/RestaurantList'\n\nexport default class Index extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"header\">\n                    <h1>Is it Open?</h1>\n                </div>\n                <div className=\"container\">\n                    <RestaurantList />\n                </div>\n                <style>\n                    {`\n                        .header {\n                            padding: 2em;\n                            border-bottom: 1px solid #d5d5d5;\n                            background: #fff;\n                        }\n                        .container {\n                            padding: 2em;\n                            display: flex;\n                            justify-content: space-between;\n                        }\n                    `}\n                </style>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Index from './pages/Index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Index />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}